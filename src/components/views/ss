<template>
  <!-- Hero Section -->
  <section class="hero-section">
    <div class="hero-content">
      <div class="hero-text">
        <h1 class="hero-title">
          <span>Transformamos</span>
          <span class="typing-container">
            <span class="typing-text"></span>
            <span class="cursor">|</span>
          </span>
          <span>em realidades digitais</span>
        </h1>
        <p class="hero-subtitle">Cada projeto é uma jornada única de inovação, design e tecnologia</p>
        <div class="hero-buttons">
          <button class="primary-button" @click="scrollToPortfolio">Explorar Portfólio</button>
          <button class="secondary-button" @click="openContactModal">Fale Conosco</button>
        </div>
      </div>
      <div class="hero-visual">
        <div class="floating-devices">
          <div class="device laptop">
            <img src="https://images.unsplash.com/photo-1547658719-da2b51169166" alt="Projeto Web" loading="lazy">
          </div>
          <div class="device tablet">
            <img src="https://images.unsplash.com/photo-1556742049-0cfed4f6a45d" alt="Projeto Mobile" loading="lazy">
          </div>
          <div class="device phone">
            <img src="https://images.unsplash.com/photo-1556155092-490a1ba16284" alt="Projeto App" loading="lazy">
          </div>
        </div>
      </div>
    </div>
    <div class="scroll-indicator" @click="scrollToPortfolio">
      <div class="mouse">
        <div class="wheel"></div>
      </div>
      <span>Desça para explorar</span>
    </div>
  </section>

  <!-- Seção de Destaques -->
  <section class="highlights-section">
    <div class="section-header">
      <h2>Nossos <span class="highlight">Diferenciais</span></h2>
      <p>O que nos torna únicos no mercado digital</p>
    </div>
    
    <div class="highlight-cards">
      <div 
        v-for="(highlight, index) in highlights" 
        :key="index" 
        class="highlight-card"
        @mouseenter="activeHighlight = index"
        :class="{active: activeHighlight === index}"
      >
        <div class="card-icon">
          <component :is="highlight.icon" />
        </div>
        <h3>{{ highlight.title }}</h3>
        <p>{{ highlight.description }}</p>
        <div class="highlight-number">{{ String(index + 1).padStart(2, '0') }}</div>
      </div>
    </div>
  </section>

  <!-- Filtro de Portfólio -->
  <div class="portfolio-filter">
    <div class="filter-container">
      <button 
        v-for="category in categories" 
        :key="category.id"
        :class="['filter-button', { active: activeFilter === category.id }]"
        @click="activeFilter = category.id"
      >
        <component :is="category.icon" class="filter-icon" />
        {{ category.name }}
      </button>
    </div>
  </div>

  <!-- Portfólio -->
  <section class="portfolio-section" ref="portfolioSection">
    <div class="section-header">
      <h2>Nossos <span class="highlight">Projetos</span></h2>
      <p>Conheça alguns dos nossos trabalhos recentes</p>
    </div>
    
    <div class="portfolio-grid">
      <div 
  v-for="project in filteredProjects" 
  :key="project.id"
  class="portfolio-item"
  :class="`category-${project.category}`"
  @click="openProjectModal(project)"
>
        <div class="item-image">
          <img :src="project.thumbnail" :alt="project.title" loading="lazy">
        </div>
        <div class="item-overlay">
          <div class="item-content">
            <span class="item-badge">{{ project.categoryName }}</span>
            <h3>{{ project.title }}</h3>
            <button class="view-button">
              Ver Detalhes
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Seção de Estatísticas -->
  <section class="stats-section">
    <div class="section-header">
      <h2>Nossos <span class="highlight">Números</span></h2>
      <p>Resultados que nos enchem de orgulho</p>
    </div>
    
    <div class="stats-container">
      <div class="stat-item" v-for="(stat, index) in stats" :key="index">
        <div class="stat-circle">
          <div class="stat-number" :ref="el => statRefs[index] = el">0</div>
        </div>
        <div class="stat-info">
          <h4>{{ stat.title }}</h4>
          <p>{{ stat.description }}</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Modal do Projeto -->
  <div class="project-modal" v-if="selectedProject" @click.self="closeProjectModal">
    <div class="modal-container">
      <button class="close-modal" @click="closeProjectModal">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
      
      <div class="modal-content">
        <div class="modal-header">
          <div class="project-meta">
            <span class="project-badge">{{ selectedProject.categoryName }}</span>
            <span class="project-date">{{ selectedProject.date }}</span>
          </div>
          <h2>{{ selectedProject.title }}</h2>
          <p class="project-subtitle">{{ selectedProject.subtitle }}</p>
        </div>
        
        <div class="modal-gallery">
          <div class="gallery-main">
            <img :src="selectedProject.images[mainImageIndex]" :alt="selectedProject.title">
          </div>
          <div class="gallery-thumbs">
            <div 
              v-for="(image, index) in selectedProject.images" 
              :key="index"
              class="thumb-item"
              :class="{active: mainImageIndex === index}"
              @click="setMainImage(index)"
            >
              <img :src="image" :alt="'Thumbnail ' + (index + 1)">
            </div>
          </div>
        </div>
        
        <div class="project-details">
          <div class="details-section">
            <h3>O Desafio</h3>
            <p>{{ selectedProject.challengeText }}</p>
          </div>
          
          <div class="details-section">
            <h3>Nossa Abordagem</h3>
            <div class="approach-steps">
              <div v-for="(step, index) in selectedProject.approach" :key="index" class="approach-step">
                <div class="step-number">{{ index + 1 }}</div>
                <div class="step-content">
                  <h4>{{ step.title }}</h4>
                  <p>{{ step.description }}</p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="details-grid">
            <div class="grid-column">
              <h3>Tecnologias Utilizadas</h3>
              <div class="tech-stack">
                <div v-for="(tech, index) in selectedProject.technologies" :key="index" class="tech-item">
                  <img :src="getTechIcon(tech)" :alt="tech">
                  <span>{{ tech }}</span>
                </div>
              </div>
            </div>
            
            <div class="grid-column">
              <h3>Resultados</h3>
              <div class="results-grid">
                <div v-for="(result, index) in selectedProject.results" :key="index" class="result-item">
                  <div class="result-value">{{ result.value }}</div>
                  <div class="result-label">{{ result.label }}</div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="modal-footer">
          <button class="modal-button" @click="openContactModal">
            Quero um projeto como este
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import { ref, computed, onMounted } from 'vue'
import { useRouter } from 'vue-router'

// Ícones SVG como componentes
const DesignIcon = {
  template: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
    <path d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M8 14C9.10457 14 10 13.1046 10 12C10 10.8954 9.10457 10 8 10C6.89543 10 6 10.8954 6 12C6 13.1046 6.89543 14 8 14Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M16 14C17.1046 14 18 13.1046 18 12C18 10.8954 17.1046 10 16 10C14.8954 10 14 10.8954 14 12C14 13.1046 14.8954 14 16 14Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M21 12C19 15 15.5 16.5 12 16.5C8.5 16.5 5 15 3 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`
}

const DevelopmentIcon = {
  template: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
    <path d="M13 19L15 21L21 15L19 13M13 19L8 14L10 12L13 15L15 13L12 10L14 8L19 13M13 19L19 13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 10L9 7M6 4L3 7L10 14L12 12L14 10L21 3L18 0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 12L14 14M4 18L2 20L6 22L8 20" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`
}

const StrategyIcon = {
  template: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
    <path d="M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 4C10 4 8 6 6 8C4 10 4 12 4 12C4 12 6 14 8 16C10 18 12 20 12 20C12 20 14 18 16 16C18 14 20 12 20 12C20 12 18 10 16 8C14 6 12 4 12 4Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`
}

const WebIcon = {
  template: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
    <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M2 12H22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 2C14.5013 4.73835 15.9228 8.29203 16 12C15.9228 15.708 14.5013 19.2616 12 22C9.49872 19.2616 8.07725 15.708 8 12C8.07725 8.29203 9.49872 4.73835 12 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`
}

const MobileIcon = {
  template: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
    <path d="M12 18H12.01M8 2H16C17.1046 2 18 2.89543 18 4V20C18 21.1046 17.1046 22 16 22H8C6.89543 22 6 21.1046 6 20V4C6 2.89543 6.89543 2 8 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`
}

const EcommerceIcon = {
  template: `<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
    <path d="M3 10H21L19 21H5L3 10ZM3 10L5 3H19L21 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M9 14C9 14.5523 8.55228 15 8 15C7.44772 15 7 14.5523 7 14C7 13.4477 7.44772 13 8 13C8.55228 13 9 13.4477 9 14Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M17 14C17 14.5523 16.5523 15 16 15C15.4477 15 15 14.5523 15 14C15 13.4477 15.4477 13 16 13C16.5523 13 17 13.4477 17 14Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`
}

export default {
  name: 'PortfolioPage',
  components: {
    DesignIcon,
    DevelopmentIcon,
    StrategyIcon,
    WebIcon,
    MobileIcon,
    EcommerceIcon
  },
  setup() {
    const router = useRouter()
    const portfolioSection = ref(null)
    const activeFilter = ref('all')
    const activeHighlight = ref(0)
    const selectedProject = ref(null)
    const mainImageIndex = ref(0)
    const statRefs = ref([])
    
    // Dados para a seção de destaques
    const highlights = [
      {
        title: 'Design Impactante',
        description: 'Interfaces que encantam e engajam os usuários desde o primeiro clique',
        icon: 'DesignIcon'
      },
      {
        title: 'Tecnologia Avançada',
        description: 'Soluções construídas com as melhores e mais modernas tecnologias',
        icon: 'DevelopmentIcon'
      },
      {
        title: 'Estratégia Digital',
        description: 'Planejamento que transforma objetivos de negócio em resultados reais',
        icon: 'StrategyIcon'
      }
    ]
    
    // Categorias com ícones
    const categories = [
      { id: 'all', name: 'Todos', icon: 'DevelopmentIcon' },
      { id: 'web', name: 'Websites', icon: 'WebIcon' },
      { id: 'ecommerce', name: 'E-commerce', icon: 'EcommerceIcon' },
      { id: 'mobile', name: 'Mobile', icon: 'MobileIcon' },
      { id: 'design', name: 'Design', icon: 'DesignIcon' }
    ]
    
    // Projetos
    const projects = [
      {
        id: 1,
        title: 'Plataforma de E-commerce',
        category: 'ecommerce',
        categoryName: 'E-commerce',
        thumbnail: 'https://images.unsplash.com/photo-1555529669-e69e7aa0ba9a',
        images: [
          'https://images.unsplash.com/photo-1555529669-e69e7aa0ba9a',
          'https://images.unsplash.com/photo-1555529669-e69e7aa0ba9a',
          'https://images.unsplash.com/photo-1555529669-e69e7aa0ba9a'
        ],
        date: 'Junho 2023',
        subtitle: 'Solução completa para vendas online',
        challengeText: 'O cliente precisava de uma plataforma de e-commerce escalável que pudesse lidar com picos de tráfego durante promoções e oferecer uma experiência de compra fluida em dispositivos móveis.',
        approach: [
          {
            title: 'Pesquisa de Usuário',
            description: 'Realizamos entrevistas e testes de usabilidade para entender as necessidades dos compradores.'
          },
          {
            title: 'Arquitetura Técnica',
            description: 'Desenvolvemos uma infraestrutura escalável utilizando microserviços.'
          },
          {
            title: 'Design Responsivo',
            description: 'Criamos uma interface que se adapta perfeitamente a qualquer dispositivo.'
          }
        ],
        technologies: ['React', 'Node.js', 'MongoDB', 'AWS', 'GraphQL'],
        results: [
          { value: '+250%', label: 'Aumento nas vendas' },
          { value: '1.2s', label: 'Tempo de carregamento' },
          { value: '98%', label: 'Satisfação do cliente' },
          { value: '+80%', label: 'Tráfego mobile' }
        ],
        liveLink: '#',
        caseStudy: '#'
      },
      {
        id: 2,
        title: 'Aplicativo de Saúde',
        category: 'mobile',
        categoryName: 'Mobile',
        thumbnail: 'https://images.unsplash.com/photo-1579684385127-1ef15d508118',
        images: [
          'https://images.unsplash.com/photo-1579684385127-1ef15d508118',
          'https://images.unsplash.com/photo-1579684385127-1ef15d508118',
          'https://images.unsplash.com/photo-1579684385127-1ef15d508118'
        ],
        date: 'Março 2023',
        subtitle: 'Monitoramento de saúde pessoal',
        challengeText: 'Desenvolver um aplicativo que permitisse aos usuários monitorar seus indicadores de saúde e compartilhá-los com seus médicos de forma segura e intuitiva.',
        approach: [
          {
            title: 'Protótipo Rápido',
            description: 'Criamos protótipos interativos para validação com usuários reais.'
          },
          {
            title: 'Segurança de Dados',
            description: 'Implementamos criptografia de ponta a ponta para proteger informações sensíveis.'
          },
          {
            title: 'Integração com Wearables',
            description: 'Conectamos o app aos principais dispositivos vestíveis do mercado.'
          }
        ],
        technologies: ['React Native', 'Firebase', 'Redux', 'Apple HealthKit'],
        results: [
          { value: '4.9', label: 'Avaliação média' },
          { value: '500k', label: 'Downloads' },
          { value: '85%', label: 'Retenção mensal' },
          { value: '40%', label: 'Uso diário' }
        ],
        liveLink: '#',
        caseStudy: '#'
      },
      {
        id: 3,
        title: 'Portal Corporativo',
        category: 'web',
        categoryName: 'Website',
        thumbnail: 'https://images.unsplash.com/photo-1467232004584-a241de8bcf5d',
        images: [
          'https://images.unsplash.com/photo-1467232004584-a241de8bcf5d',
          'https://images.unsplash.com/photo-1467232004584-a241de8bcf5d',
          'https://images.unsplash.com/photo-1467232004584-a241de8bcf5d'
        ],
        date: 'Janeiro 2023',
        subtitle: 'Presença digital para empresa global',
        challengeText: 'Criar um portal corporativo que refletisse a marca de uma multinacional e servisse como hub central para todas as suas operações globais, com conteúdo em 12 idiomas.',
        approach: [
          {
            title: 'Design de Marca',
            description: 'Desenvolvemos um sistema de design que mantivesse consistência em todas as localizações.'
          },
          {
            title: 'Arquitetura de Conteúdo',
            description: 'Estrutura modular para fácil atualização por equipes regionais.'
          },
          {
            title: 'Performance Otimizada',
            description: 'Técnicas avançadas de carregamento para usuários em todo o mundo.'
          }
        ],
        technologies: ['Vue.js', 'Nuxt.js', 'Contentful', 'Cloudflare'],
        results: [
          { value: '12', label: 'Idiomas suportados' },
          { value: '60%', label: 'Redução de bounce rate' },
          { value: '3x', label: 'Aumento no engajamento' },
          { value: '95%', label: 'Satisfação interna' }
        ],
        liveLink: '#',
        caseStudy: '#'
      },
      {
        id: 4,
        title: 'Sistema de Design',
        category: 'design',
        categoryName: 'Design',
        thumbnail: 'https://images.unsplash.com/photo-1541462608143-67571c6738dd',
        images: [
          'https://images.unsplash.com/photo-1541462608143-67571c6738dd',
          'https://images.unsplash.com/photo-1541462608143-67571c6738dd',
          'https://images.unsplash.com/photo-1541462608143-67571c6738dd'
        ],
        date: 'Novembro 2022',
        subtitle: 'Sistema unificado para produtos digitais',
        challengeText: 'Desenvolver um sistema de design completo que garantisse consistência visual e de experiência em todos os produtos digitais de uma grande empresa com múltiplas equipes de desenvolvimento.',
        approach: [
          {
            title: 'Auditoria de Interface',
            description: 'Analisamos todos os produtos existentes para identificar padrões e inconsistências.'
          },
          {
            title: 'Design Tokens',
            description: 'Criamos uma base de tokens de design para manter consistência em todas as plataformas.'
          },
          {
            title: 'Documentação Completa',
            description: 'Desenvolvemos guias detalhados para designers e desenvolvedores.'
          }
        ],
        technologies: ['Figma', 'Storybook', 'React', 'Styled Components'],
        results: [
          { value: '5x', label: 'Velocidade de desenvolvimento' },
          { value: '100%', label: 'Consistência visual' },
          { value: '40%', label: 'Redução de bugs UI' },
          { value: '8', label: 'Produtos integrados' }
        ],
        liveLink: '#',
        caseStudy: '#'
      }
    ]
    
    // Estatísticas
    const stats = [
      {
        title: 'Projetos Concluídos',
        value: 120,
        description: 'Soluções digitais entregues com excelência'
      },
      {
        title: 'Clientes Satisfeitos',
        value: 95,
        description: 'Taxa de satisfação com nossos serviços'
      },
      {
        title: 'Anos de Experiência',
        value: 8,
        description: 'Transformando ideias em realidade'
      },
      {
        title: 'Prêmios Recebidos',
        value: 14,
        description: 'Reconhecimento pela inovação e qualidade'
      }
    ]
    
    const filteredProjects = computed(() => {
      if (activeFilter.value === 'all') return projects
      return projects.filter(project => project.category === activeFilter.value)
    })
    
    // Configura animação de digitação
    const setupTypingAnimation = () => {
      const typingElement = document.querySelector('.typing-text')
      if (!typingElement) return
      
      const texts = ["ideias", "visões", "sonhos", "conceitos"]
      let textIndex = 0
      let charIndex = 0
      let isDeleting = false
      let typingSpeed = 150

      const type = () => {
        const currentText = texts[textIndex]
        
        if (isDeleting) {
          typingElement.textContent = currentText.substring(0, charIndex - 1)
          charIndex--
        } else {
          typingElement.textContent = currentText.substring(0, charIndex + 1)
          charIndex++
        }
        
        if (!isDeleting && charIndex === currentText.length) {
          isDeleting = true
          typingSpeed = 1000 // Pausa no final
        } else if (isDeleting && charIndex === 0) {
          isDeleting = false
          textIndex = (textIndex + 1) % texts.length
          typingSpeed = 500 // Pausa no início
        } else {
          typingSpeed = isDeleting ? 50 : 150
        }
        
        setTimeout(type, typingSpeed)
      }
      
      type()
    }
    
    // Animação dos contadores
    const animateCounters = () => {
      stats.forEach((stat, index) => {
        const element = statRefs.value[index]
        if (!element) return
        
        const target = stat.value
        const duration = 2000
        const increment = target / (duration / 16)
        let current = 0
        
        const updateCounter = () => {
          current += increment
          if (current < target) {
            element.textContent = Math.floor(current)
            requestAnimationFrame(updateCounter)
          } else {
            element.textContent = target
          }
        }
        
        // Dispara a animação quando o elemento estiver visível
        const observer = new IntersectionObserver((entries) => {
          if (entries[0].isIntersecting) {
            updateCounter()
            observer.disconnect()
          }
        }, { threshold: 0.5 })
        
        observer.observe(element)
      })
    }
    
    // Animação de scroll suave
    const scrollToPortfolio = () => {
      if (portfolioSection.value) {
        portfolioSection.value.scrollIntoView({ 
          behavior: 'smooth',
          block: 'start'
        })
      }
    }
    
    const openProjectModal = (project) => {
      selectedProject.value = project
      mainImageIndex.value = 0
      document.body.style.overflow = 'hidden'
    }
    
    const closeProjectModal = () => {
      selectedProject.value = null
      document.body.style.overflow = 'auto'
    }
    
    const setMainImage = (index) => {
      mainImageIndex.value = index
    }
    
    const openContactModal = () => {
      router.push('/contato')
    }
    
    const getTechIcon = (tech) => {
      const icons = {
        'React': 'https://cdn.worldvectorlogo.com/logos/react-2.svg',
        'Node.js': 'https://cdn.worldvectorlogo.com/logos/nodejs-icon.svg',
        'MongoDB': 'https://cdn.worldvectorlogo.com/logos/mongodb-icon-1.svg',
        'AWS': 'https://cdn.worldvectorlogo.com/logos/aws-2.svg',
        'GraphQL': 'https://cdn.worldvectorlogo.com/logos/graphql-logo-2.svg',
        'React Native': 'https://cdn.worldvectorlogo.com/logos/react-2.svg',
        'Firebase': 'https://cdn.worldvectorlogo.com/logos/firebase-1.svg',
        'Redux': 'https://cdn.worldvectorlogo.com/logos/redux.svg',
        'Apple HealthKit': 'https://cdn.worldvectorlogo.com/logos/apple-1.svg',
        'Vue.js': 'https://cdn.worldvectorlogo.com/logos/vue-9.svg',
        'Nuxt.js': 'https://cdn.worldvectorlogo.com/logos/nuxt-2.svg',
        'Contentful': 'https://cdn.worldvectorlogo.com/logos/contentful-1.svg',
        'Cloudflare': 'https://cdn.worldvectorlogo.com/logos/cloudflare-1.svg',
        'Figma': 'https://cdn.worldvectorlogo.com/logos/figma-1.svg',
        'Storybook': 'https://cdn.worldvectorlogo.com/logos/storybook-1.svg',
        'Styled Components': 'https://cdn.worldvectorlogo.com/logos/styled-components-1.svg'
      }
      return icons[tech] || 'https://cdn.worldvectorlogo.com/logos/javascript-1.svg'
    }
    
    // Inicializações quando o componente é montado
    onMounted(() => {
      setupTypingAnimation()
      animateCounters()
      
      // Anima os elementos quando entram na viewport
      const animateOnScroll = () => {
        const elements = document.querySelectorAll('.highlight-card, .portfolio-item, .stat-item')
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('animate')
              observer.unobserve(entry.target)
            }
          })
        }, { threshold: 0.1 })
        
        elements.forEach(element => {
          observer.observe(element)
        })
      }
      
      animateOnScroll()
    })

    return {
      portfolioSection,
      highlights,
      categories,
      stats,
      activeFilter,
      activeHighlight,
      selectedProject,
      mainImageIndex,
      filteredProjects,
      statRefs,
      scrollToPortfolio,
      openProjectModal,
      closeProjectModal,
      setMainImage,
      openContactModal,
      getTechIcon
    }
  }
}
</script>

<style scoped>
/* Variáveis CSS */
:root {
  --primary-color: #3B82F6;
  --primary-light: #EFF6FF;
  --secondary-color: #6366F1;
  --dark-color: #1E293B;
  --light-color: #F8FAFC;
  --text-color: #334155;
  --text-light: #64748B;
  --border-color: #E2E8F0;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-md: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  --shadow-xl: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

/* Reset e Estilos Base */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  color: var(--text-color);
  line-height: 1.6;
  overflow-x: hidden;
}

h1, h2, h3, h4 {
  font-weight: 700;
  line-height: 1.2;
}

a {
  text-decoration: none;
  color: inherit;
}

button {
  cursor: pointer;
  border: none;
  background: none;
  font-family: inherit;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

.highlight {
  color: var(--primary-color);
  position: relative;
  display: inline-block;
}

.highlight::after {
  content: '';
  position: absolute;
  bottom: 2px;
  left: 0;
  width: 100%;
  height: 8px;
  background-color: rgba(59, 130, 246, 0.2);
  z-index: -1;
}

.section-header {
  text-align: center;
  max-width: 800px;
  margin: 0 auto 4rem;
}

.section-header h2 {
  font-size: clamp(2rem, 4vw, 3rem);
  margin-bottom: 1rem;
}

.section-header p {
  color: var(--text-light);
  font-size: 1.1rem;
}

/* Seção Hero */
.hero-section {
  position: relative;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 6rem 2rem 4rem;
  background: linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%);
}

.hero-content {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 4rem;
  align-items: center;
  max-width: 1400px;
  margin: 0 auto;
  width: 100%;
}

.hero-text {
  max-width: 600px;
}

.hero-title {
  font-size: clamp(2.5rem, 5vw, 4rem);
  margin-bottom: 1.5rem;
  line-height: 1.2;
}

.hero-title span {
  display: block;
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.8s forwards;
}

.hero-title span:nth-child(1) {
  animation-delay: 0.1s;
}

.hero-title span:nth-child(2) {
  animation-delay: 0.3s;
}

.hero-title span:nth-child(3) {
  animation-delay: 0.5s;
}

.typing-container {
  display: inline-block;
  color: var(--primary-color);
}

.cursor {
  display: inline-block;
  width: 3px;
  height: 1em;
  background-color: var(--primary-color);
  margin-left: 2px;
  animation: blink 1s infinite;
}

.hero-subtitle {
  font-size: 1.25rem;
  color: var(--text-light);
  margin-bottom: 2.5rem;
  max-width: 500px;
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.8s 0.7s forwards;
}

.hero-buttons {
  display: flex;
  gap: 1rem;
  margin-top: 2rem;
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.8s 0.9s forwards;
}

.primary-button {
  padding: 1rem 2rem;
  border-radius: 50px;
  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
  color: white;
  font-weight: 600;
  transition: all 0.3s ease;
  box-shadow: var(--shadow);
}

.primary-button:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-md);
}

.secondary-button {
  padding: 1rem 2rem;
  border-radius: 50px;
  background: white;
  color: var(--primary-color);
  font-weight: 600;
  transition: all 0.3s ease;
  box-shadow: var(--shadow);
  border: 1px solid var(--border-color);
}

.secondary-button:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-md);
  border-color: var(--primary-color);
}

.hero-visual {
  position: relative;
  height: 500px;
}

.floating-devices {
  position: relative;
  height: 100%;
}

.device {
  position: absolute;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: var(--shadow-xl);
  opacity: 0;
  transform: translateY(50px);
  transition: all 0.8s ease;
}

.device.laptop {
  width: 500px;
  height: 300px;
  top: 50px;
  left: 0;
  z-index: 3;
  transform: rotate(-5deg);
  animation: fadeInUp 0.8s 1.1s forwards;
}

.device.tablet {
  width: 300px;
  height: 400px;
  top: 0;
  right: 50px;
  z-index: 2;
  transform: rotate(5deg);
  animation: fadeInUp 0.8s 1.3s forwards;
}

.device.phone {
  width: 150px;
  height: 250px;
  bottom: 0;
  right: 0;
  z-index: 1;
  transform: rotate(10deg);
  animation: fadeInUp 0.8s 1.5s forwards;
}

.device img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.scroll-indicator {
  position: absolute;
  bottom: 40px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  color: var(--text-light);
  font-size: 0.9rem;
  z-index: 2;
  cursor: pointer;
  transition: all 0.3s ease;
}

.scroll-indicator:hover {
  color: var(--primary-color);
}

.mouse {
  width: 30px;
  height: 50px;
  border: 2px solid currentColor;
  border-radius: 15px;
  margin-bottom: 10px;
  display: flex;
  justify-content: center;
  padding-top: 5px;
}

.wheel {
  width: 6px;
  height: 10px;
  background-color: currentColor;
  border-radius: 3px;
  animation: scroll 2s infinite;
}

/* Seção de Destaques */
.highlights-section {
  padding: 6rem 2rem;
  background-color: white;
}

.highlight-cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
}

.highlight-card {
  position: relative;
  padding: 2.5rem 2rem;
  border-radius: 16px;
  background-color: white;
  box-shadow: var(--shadow);
  transition: all 0.5s ease;
  overflow: hidden;
  z-index: 1;
  opacity: 0;
  transform: translateY(30px);
}

.highlight-card.animate {
  opacity: 1;
  transform: translateY(0);
}

.highlight-card:nth-child(1).animate {
  transition-delay: 0.1s;
}
.highlight-card:nth-child(2).animate {
  transition-delay: 0.2s;
}
.highlight-card:nth-child(3).animate {
  transition-delay: 0.3s;
}

.highlight-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
  opacity: 0;
  z-index: -1;
  transition: all 0.3s ease;
}

.highlight-card.active::before,
.highlight-card:hover::before {
  opacity: 1;
}

.highlight-card.active,
.highlight-card:hover {
  color: white;
  transform: translateY(-10px);
  box-shadow: var(--shadow-lg);
}

.highlight-card.active .card-icon svg,
.highlight-card:hover .card-icon svg {
  stroke: white;
}

.highlight-card.active .highlight-number,
.highlight-card:hover .highlight-number {
  color: rgba(255, 255, 255, 0.1);
}

.card-icon {
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(59, 130, 246, 0.1);
  border-radius: 12px;
  margin-bottom: 1.5rem;
}

.card-icon svg {
  width: 30px;
  height: 30px;
  stroke: var(--primary-color);
  transition: all 0.3s ease;
}

.highlight-card h3 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.highlight-card p {
  color: var(--text-light);
  transition: all 0.3s ease;
}

.highlight-card.active p,
.highlight-card:hover p {
  color: rgba(255, 255, 255, 0.9);
}

.highlight-number {
  position: absolute;
  top: 1rem;
  right: 1.5rem;
  font-size: 3rem;
  font-weight: 800;
  color: rgba(241, 245, 249, 0.5);
  line-height: 1;
  transition: all 0.3s ease;
}

/* Filtro de Portfólio */
.portfolio-filter {
  padding: 2rem;
  background-color: var(--light-color);
  position: sticky;
  top: 0;
  z-index: 10;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.filter-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  justify-content: center;
  max-width: 1200px;
  margin: 0 auto;
}

.filter-button {
  position: relative;
  padding: 0.75rem 1.5rem;
  border-radius: 50px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  color: var(--text-light);
  background: transparent;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.filter-button.active,
.filter-button:hover {
  background-color: white;
  color: var(--primary-color);
  box-shadow: var(--shadow);
}

.filter-icon {
  width: 18px;
  height: 18px;
  stroke: currentColor;
}

/* Seção do Portfólio */
.portfolio-section {
  padding: 6rem 2rem;
  background-color: white;
}

.portfolio-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  max-width: 1400px;
  margin: 0 auto;
}

.portfolio-item {
  position: relative;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: var(--shadow);
  transition: all 0.3s ease;
  cursor: pointer;
  height: 350px;
  opacity: 0;
  transform: translateY(30px);
}

.portfolio-item.animate {
  opacity: 1;
  transform: translateY(0);
  transition: all 0.5s ease;
}

.item-image {
  width: 100%;
  height: 100%;
}

.item-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.item-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.8), transparent 60%);
  opacity: 0;
  transition: all 0.3s ease;
  display: flex;
  align-items: flex-end;
}

.portfolio-item:hover .item-overlay {
  opacity: 1;
}

.portfolio-item:hover .item-image img {
  transform: scale(1.05);
}

.item-content {
  padding: 2rem;
  transform: translateY(20px);
  transition: all 0.3s ease;
  width: 100%;
}

.portfolio-item:hover .item-content {
  transform: translateY(0);
}

.item-badge {
  display: inline-block;
  padding: 0.5rem 1rem;
  border-radius: 50px;
  font-size: 0.75rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: white;
  background-color: var(--primary-color);
}

.item-content h3 {
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
  color: white;
}

.view-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  background-color: white;
  color: var(--dark-color);
  border-radius: 50px;
  font-weight: 600;
  transition: all 0.3s ease;
}

.view-button:hover {
  background-color: var(--light-color);
  transform: translateX(5px);
}

/* Seção de Estatísticas */
.stats-section {
  padding: 6rem 2rem;
  background-color: var(--light-color);
}

.stats-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 3rem;
  max-width: 1200px;
  margin: 0 auto;
}

.stat-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  opacity: 0;
  transform: translateY(30px);
}

.stat-item.animate {
  opacity: 1;
  transform: translateY(0);
  transition: all 0.5s ease;
}

.stat-item:nth-child(1).animate {
  transition-delay: 0.1s;
}
.stat-item:nth-child(2).animate {
  transition-delay: 0.2s;
}
.stat-item:nth-child(3).animate {
  transition-delay: 0.3s;
}
.stat-item:nth-child(4).animate {
  transition-delay: 0.4s;
}

.stat-circle {
  position: relative;
  width: 150px;
  height: 150px;
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.stat-circle::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 10px solid var(--primary-light);
}

.stat-number {
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--dark-color);
}

.stat-info h4 {
  font-size: 1.25rem;
  margin-bottom: 0.5rem;
}

.stat-info p {
  color: var(--text-light);
  font-size: 0.9rem;
}

/* Modal do Projeto */
.project-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  overflow-y: auto;
  padding: 2rem;
}

.modal-container {
  position: relative;
  background-color: white;
  border-radius: 16px;
  width: 100%;
  max-width: 1000px;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: var(--shadow-xl);
}

.close-modal {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2;
  transition: all 0.3s ease;
}

.close-modal:hover {
  background-color: rgba(0, 0, 0, 0.2);
}

.modal-content {
  padding: 3rem;
}

.modal-header {
  margin-bottom: 2rem;
}

.project-meta {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1rem;
}

.project-badge {
  padding: 0.5rem 1rem;
  border-radius: 50px;
  font-size: 0.8rem;
  font-weight: 600;
  color: white;
  background-color: var(--primary-color);
}

.project-date {
  color: var(--text-light);
  font-size: 0.9rem;
}

.modal-header h2 {
  font-size: 2rem;
  margin-bottom: 0.5rem;
}

.project-subtitle {
  color: var(--text-light);
  font-size: 1.1rem;
  margin-bottom: 1.5rem;
}

.modal-gallery {
  display: grid;
  grid-template-columns: 3fr 1fr;
  gap: 1rem;
  margin-bottom: 2rem;
}

.gallery-main {
  height: 400px;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: var(--shadow);
}

.gallery-main img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.gallery-thumbs {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.thumb-item {
  height: calc((400px - 3rem) / 4);
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
  opacity: 0.7;
  transition: all 0.3s ease;
  box-shadow: var(--shadow-sm);
}

.thumb-item:hover,
.thumb-item.active {
  opacity: 1;
  box-shadow: var(--shadow);
}

.thumb-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.project-details {
  margin-top: 2rem;
}

.details-section {
  margin-bottom: 3rem;
}

.details-section h3 {
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
  position: relative;
  padding-bottom: 0.5rem;
}

.details-section h3::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 50px;
  height: 3px;
  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
}

.details-section p {
  line-height: 1.6;
  margin-bottom: 1.5rem;
}

.approach-steps {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

.approach-step {
  display: flex;
  gap: 1.5rem;
}

.step-number {
  flex-shrink: 0;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
  color: white;
  border-radius: 50%;
  font-weight: 700;
}

.step-content h4 {
  font-size: 1.1rem;
  margin-bottom: 0.5rem;
}

.step-content p {
  color: var(--text-light);
  font-size: 0.9rem;
}

.details-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 3rem;
}

.tech-stack {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
}

.tech-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: var(--light-color);
  border-radius: 50px;
  font-size: 0.9rem;
}

.tech-item img {
  width: 20px;
  height: 20px;
}

.results-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.result-item {
  padding: 1.5rem;
  background-color: var(--light-color);
  border-radius: 12px;
  text-align: center;
}

.result-value {
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--primary-color);
  margin-bottom: 0.25rem;
}

.result-label {
  font-size: 0.9rem;
  color: var(--text-light);
}

.modal-footer {
  padding-top: 2rem;
  text-align: center;
}

.modal-button {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 2.5rem;
  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
  color: white;
  border-radius: 50px;
  font-weight: 600;
  transition: all 0.3s ease;
}

.modal-button:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow);
}

/* Animações */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

@keyframes scroll {
  0% { transform: translateY(0); opacity: 1; }
  100% { transform: translateY(15px); opacity: 0; }
}

/* Responsividade */
@media (max-width: 1024px) {
  .hero-content {
    grid-template-columns: 1fr;
    gap: 3rem;
    text-align: center;
  }
  
  .hero-text {
    margin: 0 auto;
  }
  
  .hero-subtitle {
    margin-left: auto;
    margin-right: auto;
  }
  
  .hero-buttons {
    justify-content: center;
  }
  
  .hero-visual {
    height: 400px;
  }
  
  .device.laptop {
    left: 50%;
    transform: translateX(-50%) rotate(-5deg);
  }
  
  .modal-gallery {
    grid-template-columns: 1fr;
  }
  
  .gallery-thumbs {
    flex-direction: row;
    order: -1;
    margin-bottom: 1rem;
  }
  
  .thumb-item {
    height: 80px;
    width: calc((100% - 3rem) / 4);
  }
}

@media (max-width: 768px) {
  .portfolio-grid {
    grid-template-columns: 1fr 1fr;
  }
  
  .details-grid {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  
  .stats-container {
    grid-template-columns: 1fr 1fr;
  }
}

@media (max-width: 576px) {
  .hero-title {
    font-size: 2.5rem;
  }
  
  .hero-buttons {
    flex-direction: column;
  }
  
  .portfolio-grid {
    grid-template-columns: 1fr;
  }
  
  .stats-container {
    grid-template-columns: 1fr;
  }
  
  .modal-content {
    padding: 2rem 1.5rem;
  }
  
  .modal-header h2 {
    font-size: 1.75rem;
  }
}
</style>